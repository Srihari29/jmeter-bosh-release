#!/bin/bash
export PATH=/var/vcap/packages/openjdk/bin:$PATH

JOB_NAME=jmeter_storm_worker
RUN_DIR=/var/vcap/sys/run/${JOB_NAME}
LOG_DIR=/var/vcap/sys/log/${JOB_NAME}
PIDFILE=${RUN_DIR}/pid

# JAVA options
XMS="-Xms<%=p('jvm.xms')%>"
XMX="-Xmx<%=p('jvm.xmx')%>"
TENURING="-XX:MaxTenuringThreshold=<%=p('jvm.maxTenuringThreshold')%>"
CLASS_UNLOAD="-XX:+CMSClassUnloadingEnabled"
DUMP="-XX:+HeapDumpOnOutOfMemoryError"
SERVER="-server" # optimize JAVA performance
JVM_ARGS="$SERVER $XMS $XMX $TENURING $CLASS_UNLOAD $DUMP"

#JMETER options
SERVER_PORT=<%=p('server_port')%>
RMI_HOST_DEF="-Djava.rmi.server.hostname=<%=spec.networks.to_h.values.first.ip%>"

case $1 in

  start)

    mkdir -p $RUN_DIR $LOG_DIR
    chown -R vcap:vcap $RUN_DIR $LOG_DIR

    echo $$ > $PIDFILE

    pushd /var/vcap/packages/jmeter/bin

    exec java $JVM_ARGS -jar "ApacheJMeter.jar" \
      ${RMI_HOST_DEF} \
      -Dserver_port=$SERVER_PORT \
      --server \
      --jmeterlogfile $LOG_DIR/jmeter-server.log \
      >>  $LOG_DIR/${JOB_NAME}.stdout.log \
      2>> $LOG_DIR/${JOB_NAME}.stderr.log

    ;;

  stop)

    if [ -f "$PIDFILE" ]; then
      pid=$(head -n 1 $PIDFILE)
      kill -9 $pid
      rm -f $PIDFILE
      echo "Process $pid killed... well probably"
    else
      echo "Unable to find PIDFILE: $PIDFILE"
    fi

    ;;

  *)
    echo "Usage: ctl {start|stop}" ;;

esac
